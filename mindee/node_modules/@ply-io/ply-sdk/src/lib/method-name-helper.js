const methodTypes = {
	ACTIONS: 'actions',
	AUTH: 'auth'
};

const getType = (methodName) => {
	if (isActions(methodName)) {
		return methodTypes.ACTIONS;
	}
	if (isAuth(methodName)) {
		return methodTypes.AUTH;
	}
	return '';
};

const isActions = (methodName) => methodName.startsWith(methodTypes.ACTIONS);

const isAuth = (methodName) => methodName.startsWith(methodTypes.AUTH);

const isParams = (methodName) => methodName.includes('.params');

const getRootObjectNameFromName = (methodName) => {
	if (isActions(methodName)) {
		/**
		 * for example:
		 * methodName === 'actions.some_key.params', isParams(methodName) === true
		 * methodName === 'actions.some_key.handler', isParams(methodName) === false
		 */
		if (isParams(methodName)) {
			return methodName.replace('.params', '');
		}
		return methodName.replace('.handler', '');
	} else if (isAuth(methodName)) {
		return methodTypes.AUTH;
	}
	return '';
};

const methodNameHelper = {
	getType,
	isActions,
	isAuth,
	isParams,
	getRootObjectNameFromName
};

module.exports = methodNameHelper;
