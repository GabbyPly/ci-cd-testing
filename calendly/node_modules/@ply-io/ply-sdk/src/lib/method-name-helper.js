const methodTypes = {
	ACTIONS: 'actions',
	AUTH: 'auth'
};

const getType = (methodName) => {
	if (methodName.startsWith(methodTypes.ACTIONS)) {
		console.log('actions type method');
		return methodTypes.ACTIONS;
	}
	if (methodName.startsWith(methodTypes.AUTH)) {
		console.log('auth type method');
		return methodTypes.AUTH;
	}
	return '';
};

const isActions = (methodName) => {
	if (methodName.startsWith(methodTypes.ACTIONS)) {
		return true;
	}
	return '';
};

const isAuth = (methodName) => {
	if (methodName.startsWith(methodTypes.AUTH)) {
		return true;
	}
	return false;
};

const isParams = (methodName) => {
	return methodName.includes('.params');
};

const getRootObjectNameFromName = (methodName) => {
	if (getType(methodName) == methodTypes.ACTIONS) {
		return methodName.replace('.handler', '');
	}
	if (getType(methodName) == methodTypes.AUTH) {
		return methodTypes.AUTH;
	}
	return '';
};

const methodNameHelper = {
	getType,
	isActions,
	isAuth,
	isParams,
	getRootObjectNameFromName
};

module.exports = methodNameHelper;
